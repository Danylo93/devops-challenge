trigger:
  - main

variables:
  imageName: 'devops-app'
  imageTag: 'v1'
  acrName: 'acrdevopschallenge'
  acrLoginServer: '$(acrName).azurecr.io'
  azureSubscription: 'devops-challenge'
  aksClusterName: 'aksdevopschallenge'
  aksResourceGroup: 'rg-devops'

stages:
  - stage: Build
    displayName: üê≥ Build e Push Docker
    jobs:
      - job: DockerBuildPush
        pool:
          name: Default
          demands:
            - agent.os -equals Linux
        steps:
          - task: Docker@2
            displayName: üì¶ Build e Push da imagem
            inputs:
              containerRegistry: 'acr-devops-connection'
              repository: '$(imageName)'
              command: 'buildAndPush'
              Dockerfile: 'app/Dockerfile'
              tags: |
                $(imageTag)

  - stage: Terraform
    displayName: üåç Terraform Infra
    jobs:
      - job: TerraformValidatePlan
        pool:
          name: Default
          demands:
            - agent.os -equals Linux
        steps:
          - task: AzureCLI@2
            displayName: üîê Login Azure + Terraform
            inputs:
              azureSubscription: '$(azureSubscription)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                cd terraform
                terraform init -upgrade -input=false
                terraform validate
                terraform plan -out=tfplan

  - stage: Deploy
    displayName: üöÄ Deploy no AKS com Helm
    dependsOn: [Build, Terraform]
    jobs:
      - job: HelmDeploy
        pool:
          name: Default
          demands:
            - agent.os -equals Linux
        steps:
          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: 'latest'

          - task: AzureCLI@2
            displayName: üì§ Deploy Helm Chart
            inputs:
              azureSubscription: '$(azureSubscription)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName)
                helm upgrade --install $(imageName) helm \
                  --set image.repository=$(acrLoginServer)/$(imageName) \
                  --set image.tag=$(imageTag) \
                  --set image.pullPolicy=Always